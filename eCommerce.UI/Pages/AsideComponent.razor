@inject FilterHttpClient Http

<div class="d-flex flex-column m-2 ms-0 p-2 pt-0 border border-secondary-subtle" style="min-width:160px; max-width:200px;">
    <LinkComponent LinkGroup="linkGroup" OnLinkClick="OnLinkClick"></LinkComponent>

    @foreach (var group in FilterGroups)
    {
        <FilterComponent FilterGroup="group"></FilterComponent>
    }

    <button class="btn btn-outline-primary rounded-0 mt-2" @onclick="FilterProducts">Apply Filter</button>
</div>

@code {
    List<FilterGroup> FilterGroups = [];
    readonly LinkGroup linkGroup = new()
        {
            Name = "Categories",
            LinkOptions = new()
            {
                new()
                {
                    Id = 1,
                    Name = "Clothes"
                },
                new()
                {
                    Id = 2,
                    Name = "Electronics"
                }
            }
        };

    protected override async Task OnInitializedAsync()
    {
        
    }

    protected override void OnInitialized()
    {
        var linkOption = linkGroup.LinkOptions.FirstOrDefault();
        if (linkOption is not null)
            OnLinkClick(linkOption.Id);
    }

    void OnLinkClick(int id)
    {
        linkGroup.LinkOptions.ForEach(l => l.IsSelected = false);
        linkGroup.LinkOptions.Single(l => l.Id.Equals(id)).IsSelected = true;

        FilterGroups = new()
        {
            new() {
                Id = 1,
                Name = "Group 1",
                FilterOptions = new()
                {
                    new (1, "Option 1", OptionType.Checkbox),
                    new (2, "Option 2", OptionType.Checkbox, true)
                }
            },
            new() {
                Id = 2,
                Name = "Group 2",
                FilterOptions = new()
                {
                    new (3, "Radios", OptionType.RadioButton, new List<RadioModel> { new(1, "Radio 1"), new(2, "Radio 2"), new(3, "Radio 3") }, 2)
                }
            },
            new() {
                Id = 3,
                Name = "Group 3",
                FilterOptions = new()
                {
                    new (4, "Range", OptionType.Range, 1, 100, 1)
                }
            }
        };
    }

    private async Task FilterProducts(MouseEventArgs e)
    {
        // Use the filters collection
    }
}